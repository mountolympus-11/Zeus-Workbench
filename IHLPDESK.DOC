\[----------------------------------------------------------------------\]
\[This file includes the following files...\]
\[Open Interface Hypertext files:\]
\file "styles.doc"
\[...End of included files\]


\[----------------------------------------------------------------------\]
\[--Styles Unique to this file--\]

\def_style "Heading" \fg "Color.Green" \bg "Color.Blue" 
\def_style "head2" \fg "Color.Maroon" 
\def_style "tablehd" \fg "Color.NavyBlue" 
\def_style "Link" \fg "Color.DarkGreen" \font "Fonts.BoldUnderLine10" 
\def_style "scoped" \fg "Color.MediumBlue" 
\def_style "unscoped" \fg "Color.Magenta" 
\def_style "New Style - 3" 
\[----------------------------------------------------------------------\]

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Helpdesk Overview"
\0 \0 \{\set_style "Heading" Helpdesk Overview\}\p
\p
The PLATINUM InfoSession Helpdesk is an application that allows the user to issue operator commands and monitor command output, message traffic, and the local workstation trace buffer.\p
\p
With the Helpdesk, the user can monitor message classes that are routed to any of the InfoSession message destinations.  This is very useful for users attempting to gather diagnostic information relating to SQL requests and application navigation for resolving problems with run-time application and project definitions.\p
\p
There are three types of output widows:\p
\p
o  \{\set_style "Link" \{\goto "<ihlpdesk>Command Window" \{\set_style "Link" Command Window\}\}.\}  The user can enter operator commands in the Command window and review the response traffic generated by the command.\p
\p
o  \{\goto "<ihlpdesk>Monitor Window" Monitor Window\}.  The user can monitor message traffic in the Monitor window based on the criteria of message class and destination.\p
\p
o  \{\goto "<ihlpdesk>Trace Window" Trace Window\}.  The user can use the Trace window to monitor the local workstation trace buffer.  This facility is useful for tracing requests made to the run-time call level interface (CLI) and for diagnosing communication failures.\p
\p
The Helpdesk application can run while either connected to or disconnected from the InfoSession host component.  The Helpdesk can be run in two modes:\p
\p
o  \{\goto "<ihlpdesk>Connecting Helpdesk to InfoSession" Connected\}.  Users have access to the full Helpdesk facility based on their level of authorization .\p
\p
o  \{\goto "<ihlpdesk>Disconnecting Helpdesk from InfoSession" Disconnected\}.  Users have access to only the local workstation trace facility. \p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Connecting Helpdesk to InfoSession"
\0 \0 \{\set_style "Heading" Connecting the Helpdesk to InfoSession\p
\}\p
Connecting the Helpdesk will establish a session with the host InfoSession component.  The Helpdesk user must identify himself to InfoSession by entering a valid password and userid.  Once connected to the InfoSession host component, you can use the Monitor, Command, and Trace windows.\p
\p
Users have the ability to monitor local (generated by the user's task) or global (generated by any task) message destinations, depending on their authorization.\p
\p
You can connect the Helpdesk in one of three ways:\p
\p
o  Select the \{\set_style "italic" Connect \} icon on the toolbar.\p
\p
o  Select \{\set_style "italic" File, Connect\}\{\set_style "italic"  \} from the menu bar.\p
\p
o  Select Options, \{\set_style "italic" Auto Connect \} from the menu bar to automatically connect Helpdesk when it is started.\p
\p
See additional topics:\p
\p
\{\goto "<ihlpdesk>Signing on to the Helpdesk" Signing on to the Helpdesk\}\p
\{\goto "<ihlpdesk>Changing your Password" Changing your Password\}\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Disconnecting Helpdesk from InfoSession"
\0 \0 \{\set_style "Heading" Disconnecting the Helpdesk from InfoSession\p
\}\p
Disconnecting the Helpdesk will drop the session between the Helpdesk application and the host InfoSession component.  All open Command and Monitor windows will be closed automatically when <Disconnect> is selected.\p
\p
In disconnected mode, the user has access to only the local trace facility in Helpdesk.  This facility is useful for tracing requests made to the run-time call level interface (CLI) and for diagnosing communication problems. \p
\p
You can disconnect Helpdesk in one of three ways:\p
\p
o  Select the \{\set_style "italic" Disconnect \} icon on the toolbar.\p
\p
o  Select \{\set_style "italic" File, Disconnect \} from the menu bar.\p
\p
o  Close Helpdesk, and the user is disconnected.\p
\p
\{\set_style "bold" NOTE:\}  When you are disconnected from the InfoSession host component, you can monitor only the Trace window.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Signing on to the Helpdesk"
\0 \0 \{\set_style "Heading" Signing on to the Helpdesk\p
\}\p
Signing on to the Helpdesk is required only for connected Helpdesk users.  If external security is enabled on the InfoSession host component, a valid user ID and Password are required in the InfoSession Helpdesk Signon window.\p
\p
See the following topics:\p
\p
\{\subtopic "<ihlpdesk>Changing your Password" Changing your Password\}\p
\{\subtopic "<ihlpdesk>InfoSession Helpdesk Signon Window" InfoSession Helpdesk Signon Window\}\p
\p
\p
\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Changing your Password"
\0 \0 \{\set_style "Heading" Changing your Password\p
\}\p
First, enter your user  ID and password in the Userid and Password fields.\p
\p
To change your password, you must supply the new password in the New Password field and retype it in the Verify Password field.\p
\p
\{\set_style "bold" NOTE:\}  The new password must conform to your external security product's password requirements.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>InfoSession Helpdesk Signon Window"
\0 \0 \{\set_style "Heading" InfoSession Helpdesk Signon Window\p
\}\p
The InfoSession Helpdesk Signon Window allows you to sign on to the Helpdesk, if you are a connected Helpdesk user.\p
\p
The following fields are displayed:\p
\p
\{\subtopic "<ihlpdesk>Userid" Userid\}\p
\{\subtopic "<ihlpdesk>Password" Password\}\p
\{\subtopic "<ihlpdesk>New Password" New Password\}\p
\{\subtopic "<ihlpdesk>Verify Password" Verify Password\}\p
\{\subtopic "<ihlpdesk>Group" Group\}\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Userid"
\0 \0 \{\set_style "Heading" Userid\p
\}\p
Enter your Userid.                     
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Password"
\0 \0 \{\set_style "Heading" Password\p
\}\p
Enter your password.                     
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>New Password"
\0 \0 \{\set_style "Heading" New Password\p
\}\p
To change your password, enter the new password.                     
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Verify Password"
\0 \0 \{\set_style "Heading" Verify Password\p
\}\p
Re-type your new password to verify that the new password you entered is correct.                     
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Group"
\0 \0 \{\set_style "Heading" Group\p
\}\p
Enter the group.                     
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Starting Helpdesk"
\0 \0 \{\set_style "Heading" Starting the Helpdesk\}\p
\p
If selected, the Helpdesk icon is added to the PLATINUM InfoSession program group during installation.\p
\p
\p
\p
Double-click the InfoSession Helpdesk icon to start the Helpdesk.  The \{\subtopic "<ihlpdesk>InfoSession Helpdesk Window" InfoSession Helpdesk Window\} displays.\p
\p
See the following topics:\p
\p
\{\subtopic "<ihlpdesk>Command Window" Command Window\}\p
\{\subtopic "<ihlpdesk>Monitor Window" Monitor Window\}\p
\{\subtopic "<ihlpdesk>Trace Window" Trace Window\}\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>InfoSession Helpdesk Window"
\0 \0 \{\set_style "Heading" InfoSession Helpdesk Window\p
\}\p
When you first access the InfoSession Helpdesk Window,  the Helpdesk Toolbar is displayed at the top of the window.  The Toolbar enables you to display the three different types of output windows. \p
\p
The following Toolbar buttons are available:\p
\p
\{\subtopic "<ihlpdesk>Help" Help\}\p
\{\subtopic "<ihlpdesk>Command Window toolbar button" Command Window toolbar button\}\p
\{\subtopic "<ihlpdesk>Monitor Window toolbar button" Monitor Window toolbar button\}\p
\{\subtopic "<ihlpdesk>Trace Window toolbar button" Trace Window toolbar button\}\p
\{\subtopic "<ihlpdesk>Connect toolbar button" Connect  toolbar button\}\p
\{\subtopic "<ihlpdesk>Disconnect toolbar button" Disconnect  toolbar button\}\p
\{\subtopic "<ihlpdesk>Save" Save\}\p
\p
\p
\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Help"
\0 \0 \{\set_style "Heading" Help\p
\}\p
Provides information on how to use the Helpdesk.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Command Window toolbar button"
\0 \0 \{\set_style "Heading" Command Window toolbar button\p
\}\p
Opens a \{\goto "<ihlpdesk>Command Window" Command window\}.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Monitor Window toolbar button"
\0 \0 \{\set_style "Heading" Monitor Window toolbar button\p
\}\p
Opens a \{\goto "<ihlpdesk>Monitor Window" Monitor window\}.                      
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Trace Window toolbar button"
\0 \0 \{\set_style "Heading" Trace Window toolbar button\p
\}\p
Opens a \{\goto "<ihlpdesk>Trace Window" Trace window\}.                     
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Connect toolbar button"
\0 \0 \{\set_style "Heading" Connect toolbar button\p
\}\p
Connects the Helpdesk to the InfoSession host server component.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Disconnect toolbar button"
\0 \0 \{\set_style "Heading" Disconnect toolbar button\p
\}\p
Disconnects the Helpdesk from the InfoSession host server component.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Save"
\0 \0 \{\set_style "Heading" Save\p
\}\p
Saves the information in the output window to a specified file.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Command Window"
\0 \0 \{\set_style "Heading" Command Window\p
\}\p
The Command window is used to issue commands in the command field and displays the resulting command output messages.\p
\p
The following field is displayed:\p
\p
\{\subtopic "<ihlpdesk>Command (Command Window)" Command\}\p
\p
From the Command window, you can enter \{\goto "<ihlpdesk>Operator Commands" Operator Commands\} in the Command field.      
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Command (Command Window)"
\0 \0 \{\set_style "Heading" Command (Command Window)\p
\}\p
Enter the command you want to issue.                     
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Monitor Window"
\0 \0 \{\set_style "Heading" Monitor Window\p
\}\p
The monitor window allows you to monitor InfoSession message traffic.  You can monitor messages by specifying class, destination, and scope in \{\set_style "italic" Options, Configure...\} on the menu bar for the active window.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Trace Window"
\0 \0 \{\set_style "Heading" Trace Window\p
\}\p
The Trace window is useful for debugging run-time applications.  All run-time requests and their associated return codes are journaled in the Trace window.  The Trace window also provides an internal diagnostic tool for debugging workstation problems that occur while InfoSession is executing.\p
\p
The Trace window options can be defined in the configuration application:\p
\p
\{\set_style "head2" SQL Events\p
\}\p
o  SQL Statements\p
\p
o  SQL Parameters\p
\p
o  SQL Error Data\p
\p
o  ODBC Calls\p
\p
\{\set_style "head2" Communication Events\p
\}\p
o  XPORT General\p
\p
o  XPORT Detail\p
\p
o  Buffers\p
\p
o  Protocol\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Operator Commands"
\0 \0 \{\set_style "Heading" Operator Commands\}\p
\p
InfoSession supports operator commands that enable you to check or modify the current status of InfoSession.    \p
\p
See the following topics:\p
\p
\{\goto "<ihlpdesk>Entering Operator Commands" Entering Operator Commands\}\p
\{\goto "<ihlpdesk>Viewing Operator Command Results" Viewing Operator Command Results\}\p
\{\goto "<ihlpdesk>Command Syntax Conventions" Command Syntax Conventions\}\p
\{\goto "<ihlpdesk>Specifying Multiple Operands" Specifying Multiple Operands\}\p
\{\goto "<ihlpdesk>Specifying Multiple Values in an Operand" Specifying Multiple Values in an Operand\}\p
\p
In this online help system, operands that are scoped appear in \{\set_style "scoped" Bright Blue\}.  Operands that are unscoped appear in \{\set_style "unscoped" Magenta\}.\p
\p
For a more complete explanation with examples of the operator commands, refer to the InfoSession Operator Commands, System Messages, and Helpdesk Reference Guide.\p
\p
Select an Operator command below:\p
\p
\{\subtopic "<ihlpdesk>CANCEL Command" CANCEL Command\}\p
\{\subtopic "<ihlpdesk>DUMP Command" DUMP Command\}\p
\{\subtopic "<ihlpdesk>EVENTS Command" EVENTS Command\}\p
\{\subtopic "<ihlpdesk>FSTOP Command" FSTOP Command\}\p
\{\subtopic "<ihlpdesk>ISSUE Command" ISSUE Command\}\p
\{\subtopic "<ihlpdesk>ISSUE DISPLAY Command" ISSUE DISPLAY Command\}\p
\{\subtopic "<ihlpdesk>ISSUEND Command" ISSUEND Command\}\p
\{\subtopic "<ihlpdesk>KILL Command" KILL Command\}\p
\{\subtopic "<ihlpdesk>LOCK Command" LOCK Command\}\p
\{\subtopic "<ihlpdesk>LOG Command" LOG Command\}\p
\{\subtopic "<ihlpdesk>MESSAGE Command" MESSAGE Command\}\p
\{\subtopic "<ihlpdesk>PARM Command" PARM Command\}\p
\{\subtopic "<ihlpdesk>PROJLIST Command" PROJLIST Command\}\p
\{\subtopic "<ihlpdesk>STOP Command" STOP Command\}\p
\{\subtopic "<ihlpdesk>STORAGE Command" STORAGE Command\}\p
\{\subtopic "<ihlpdesk>SYSTEMS Command" SYSTEMS Command\}\p
\{\subtopic "<ihlpdesk>TASKLIST  Command" TASKLIST Command\}\p
\{\subtopic "<ihlpdesk>TCP DISPLAY Command" TCP DISPLAY Command\}\p
\{\subtopic "<ihlpdesk>TCP DISPLAY PATH Command" TCP DISPLAY PATH Command\}\p
\{\subtopic "<ihlpdesk>TCP DISPLAY SOCKET Command" TCP DISPLAY SOCKET Command\}\p
\{\subtopic "<ihlpdesk>TCP START APPLICATION Command" TCP START APPLICATION Command\}\p
\{\subtopic "<ihlpdesk>TCP START CONNECTION Command" TCP START CONNECTION Command\}\p
\{\subtopic "<ihlpdesk>TCP STOP PATH Command" TCP STOP PATH Command\}\p
\{\subtopic "<ihlpdesk>TCP STOP SOCKET Command" TCP STOP SOCKET Command\}\p
\{\subtopic "<ihlpdesk>TPEND Command" TPEND Command\}\p
\{\subtopic "<ihlpdesk>TPLIMITS Command" TPLIMITS Command\}\p
\{\subtopic "<ihlpdesk>TPPOOLS Command" TPPOOLS Command\}\p
\{\subtopic "<ihlpdesk>TPSTART Command" TPSTART Command\}\p
\{\subtopic "<ihlpdesk>TPUSER Command" TPUSER Command\}\p
\{\subtopic "<ihlpdesk>TRACE Command" TRACE Command\}\p
\{\subtopic "<ihlpdesk>USERLIST Command" USERLIST Command\}\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>CANCEL Command"
\0 \0 \{\set_style "unscoped" CANCEL Command\p
\}\p
The CANCEL command allows you to quickly terminate the InfoSession system or a specified task.  Unlike the STOP command, CANCEL will  shut down the InfoSession system or task quickly.\p
\p
\{\set_style "head2" Syntax\p
\}\p
CANCEL TASK(task)\p
\p
\{\set_style "bold" CANCEL\p
\}Command keyword.  If you do not specify the TASK operand, the command will be issued against the entire InfoSession system.\p
\p
\{\set_style "bold" TASK(task)\p
\}A specific task to cancel.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>DUMP Command"
\0 \0 \{\set_style "unscoped" DUMP Command\p
\}\p
The DUMP command allows you to take an SVC dump of the InfoSession address space and any of its active dataspaces.  Note that because this command is issued at the operator's discretion, there is no limit on the number of times this command can be issued.  This means that DUMP \p
commands do not count against the total number of SVC dumps limited by the SDUMP( ) parameter.\p
\p
\{\set_style "head2" Syntax\p
\}\p
DUMP [{ADDR} {DSPNAME(dataspace-name-list)} {DISPLAY}\p
     {RESET} {MAXIMUM(max-value)}]\p
\p
\{\set_style "bold" DUMP\}\p
Command keyword.  Can be abbreviated as DU.\p
\p
\{\set_style "bold" ADDR\}\p
Dumps the primary address space.\p
\p
\{\set_style "bold" DSPNAME (dataspace-name-list)\}\p
Identifies a dataspace name or a comma-delimited list of dataspace names to dump.\p
\p
All identified dataspaces will be contained in a single SVC dump.  The primary address space is included in the dump also if the ADDR keyword is specified.\p
\p
\{\set_style "bold" DISPLAY\}\p
Displays the number of SVC dumps allowed and issued against the SDUMP maximum.\p
\p
\{\set_style "bold" RESET\}\p
Resets the current number of SVC dumps taken to zero.\p
\p
\{\set_style "bold" MAXIMUM(max-value)\}\p
Replaces the maximum number of SVC dumps allowed in the SDUMP startup parameter with the number supplied in max-value.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>EVENTS Command"
\0 \0 \{\set_style "unscoped" EVENTS Command\}\p
\p
The EVENTS command allows you to display and reset event counters.  These counters track the number of times an event occurs.  Two counts are maintained for each event:\p
\p
1.	The number of times the event has occurred within the current interval.  An interval:\p
\p
o  Begins at InfoSession initialization and whenever an EVENTS RESET command is issued.  An interval-start-time is maintained for each event to allow independent control over each event's count statistics.\p
\p
o  Continues until the event is reset.  Displaying the event does not reset the counter.\p
\p
o  Ends when you reset the event counter.\p
\p
2.	The total number of times the event has occurred since InfoSession initialization.\p
\p
\{\set_style "head2" Syntax\}\p
\p
EVENTS [{DISPLAY} {RESET} {ID(ID-list)}]\p
\p
\{\set_style "bold" EVENTS\}\p
Command keyword.  You can enter EVENTS or EV when you issue this command.\p
\p
\{\set_style "bold" DISPLAY\}\p
Displays the current statistics for all events.  Can be used with the ID operand to display statistics for specific events.  DISPLAY is the default action if neither DISPLAY nor RESET is specified.\p
\p
\{\set_style "bold" RESET\}\p
Clears the interval-count value and begins a new interval for all events.  Can be used with the ID operand to reset count statistics for specific event IDs.\p
\p
RESET and DISPLAY can be included in the same command.\p
\p
\{\set_style "bold" ID(ID-list)\}\p
\p
Identifies an event ID or comma-delimited list of event IDs to select for DISPLAY, RESET, or both.  An event's ID is displayed with its statistics via DISPLAY.  If an ID is not specified, all events are listed.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>FSTOP Command"
\0 \0 \{\set_style "unscoped" FSTOP Command\p
\}\p
The FSTOP command allows you to shut down the InfoSession system even if there are projects currently open.  This command is also referred to as a Faststop.\p
\p
\{\set_style "head2" Syntax\}\p
\p
FSTOP\p
\p
\{\set_style "bold" FSTOP\}\p
Command keyword.  You can enter FSTOP or FP when you issue this command.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>ISSUE Command"
\0 \0 \{\set_style "scoped" ISSUE Command\}\p
\p
The ISSUE command is used to establish automatic submission of other InfoSession operator commands.  One or more InfoSession commands may be enabled to initiate after the specified time interval either until the specified time has expired or the automatic command submission process is terminated using the ISSUEND command.  When commands are automatically submitted, message INTCMD001I is issued to indicate the automatic command submission identifier and the userid of the submitter.  Command output generated by the submitted commands is delivered to the console or Helpdesk command window of the ISSUE command requestor. \p
\p
Restricted Helpdesk users may only issue commands to be automatically submitted within their scope.\p
\p
\{\set_style "head2" Syntax\}\p
\p
ISSUE {COMMANDS(common list)} {EVERY(time units)} \p
{FOR(time units) | FOREVER} {HOURS | MINUTES | SECONDS}\p
{ID(request identifier)}\p
\p
\{\set_style "bold" ISSUE\}\p
Command keyword.  You can enter ISSUE or IS when you issue this command.\p
\p
\{\set_style "bold" COMMANDS\}\p
Specifies up to 8 commands to be automatically submitted.  Commands containing embedded blanks must be contained within double quotes (").  Multiple commands must be delimited by commas.\p
\p
\{\set_style "bold" EVERY\}\p
Specifies the time interval in units (hours, minutes, seconds) to wait prior to submitting the specified command(s).  If the time unit is omitted, the default value is every one minute.\p
\p
\{\set_style "bold" FOR\}\p
Specifies the length of time the automated command submission process should remain active. This value is in increments of the specified units (hours, minutes, seconds).  If the time unit is omitted, the default is minutes.\p
\p
\{\set_style "bold" FOREVER\}\p
Specifies that the automated command submission monitor should remain active until it is manually terminated with the ISSUEND command.  This is the default.\p
\p
\{\set_style "bold" HOURS\}\p
Time value specified in units of hours.\p
\p
\{\set_style "bold" MINUTES\}\p
Time value specified in units of minutes.\p
\p
\{\set_style "bold" SECONDS\}\p
Time value specified in units of seconds.\p
\p
\{\set_style "bold" ID\}\p
Specifies the automated command submission identifier.  This value is a 1- to 8-character name that can be used to uniquely identify the command submission process and allows this command submission process to be terminated separately from other command submission \p
processes.  If omitted, the default ID value assigned is ISSDFT for fully authorized users.  Restricted Helpdesk users are automatically assigned an ID value of their taskname and are not authorized to override this value.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>ISSUE DISPLAY Command"
\0 \0 \{\set_style "scoped" ISSUE DISPLAY Command\}\p
\p
The ISSUE DISPLAY command allows you to display the information associated with the submitted commands of the ID.\p
\p
\{\set_style "head2" Syntax\}\p
\p
ISSUE DISPLAY {ID(request identifier)}\p
\p
\{\set_style "bold" ISSUE DISPLAY\}\p
Command keyword.  You can enter ISSUE DISPLAY or IS D when you issue this command.\p
\p
\{\set_style "bold" ID\}\p
Specifies the automated command submission identifier.  This value is a 1- to 8-character name that can be used to uniquely identify the command submission process and allows this command submission process to be terminated separately from other command submission processes.  If omitted, the default ID value assigned is ISSDFT for fully authorized users.  Restricted Helpdesk users are automatically assigned an ID value of their taskname and are not authorized to override this value.\p
\p
\{\set_style "bold" DISPLAY\}\p
Displays the automatic command submission processes currently active and the commands to be submitted.  If the ID parameter is omitted,  all automatic command submission processes within the user's scope are displayed.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>ISSUEND Command"
\0 \0 \{\set_style "scoped" ISSUEND Command\}\p
\p
The ISSUEND command is used to terminate an automatic command submission process previously established using the ISSUE command.\p
\p
\{\set_style "head2" Syntax\}\p
\p
ISSUEND ID(request identifier) | ALL\p
\p
\{\set_style "bold" ISSUEND\}\p
Command keyword.  You can enter ISSUEND or ISE when you issue this command.\p
\p
\{\set_style "bold" ID\}\p
Specifies the automated command submission request identifier.  This value is a 1- to 8-character name that can be used to uniquely identify the command submission process to be terminated.   Restricted Helpdesk users are automatically assigned an ID value of their taskname and are \p
not authorized to override this value.\p
\p
\{\set_style "bold" ALL\}\p
Indicates that all automatic command submission processes are to be terminated.  This operand is not authorized for restricted Helpdesk users.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>KILL Command"
\0 \0 \{\set_style "unscoped" KILL Command\}\p
\p
The KILL command provides a means of immediately terminating a specified task.  The KILL command is used when all other means of terminating a task have failed.  For example, if the CANCEL and STOP commands do not resolve a problem, you can issue a KILL command.  The \p
KILL command is intended to terminate a looping or otherwise unresponsive workunit.  \p
\p
\{\set_style "bold" NOTE:\}  Before issuing a KILL command, issue the CANCEL and STOP commands with the TASK(task) operand.  The CANCEL and STOP commands request an orderly shut down of the workunit.\p
\p
\{\set_style "head2" Syntax\}\p
\p
KILL TASK(task)\p
\p
\{\set_style "bold" KILL\}\p
Command keyword.\p
\p
\{\set_style "bold" TASK(task)\}\p
Specify the name of the task to be terminated.           
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>LOCK Command"
\0 \0 \{\set_style "unscoped" LOCK Command\}\p
\p
The LOCK command allows you to display or reset the statistics for all the global locks defined in the system.\p
\p
\{\set_style "head2" Syntax\p
\}\p
\p
LOCK [{DISPLAY} {RESET}]\p
\p
\{\set_style "bold" LOCK\}\p
Command keyword.  If you specify the LOCK keyword without an operand, the statistics for each global lock defined in the system are displayed.\p
\p
\{\set_style "bold" DISPLAY\}\p
Displays the statistics for each global lock defined in the system.\p
\p
\{\set_style "bold" RESET\}\p
Sets all lock activity statistics to zero.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>LOG Command"
\0 \0 \{\set_style "unscoped" LOG Command\}\p
\p
The LOG command allows you to view and process the log file.\p
\p
\{\set_style "head2" Syntax\}\p
\p
LOG [{DISPLAY} {SWITCH} {FLUSH}]\p
\p
\{\set_style "bold" LOG\}\p
Command keyword.  If you specify the LOG keyword without an operand, the status of each log file is displayed.\p
\p
\{\set_style "bold" DISPLAY\}\p
Displays the status of all log files.  This operand is the default if no other operands are specified.\p
\p
\{\set_style "bold" SWITCH\}\p
Writes all buffered messages to the currently active LOGFILE, closes that LOGFILE, and opens the next LOGFILE to receive subsequent message traffic.\p
\p
\{\set_style "bold" FLUSH\}\p
Writes all the messages in the buffer to the LOGFILE on disk.         
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>MESSAGE Command"
\0 \0 \{\set_style "scoped" MESSAGE Command\}\p
\p
The MESSAGE command allows you to view or modify the status of a message class for the system or for a specified task.  You can use the MESSAGE command to change the active or inactive status of a message class and to change the destinations associated with a message class.  Each INT-prefixed message issued by InfoSession is assigned a message class.\p
\p
Each message class has a default destination where the message is routed  when the message class is active.  See \{\subtopic "<ihlpdesk>Message Classes and Destinations" Message Classes and Destinations\}.\p
\p
\{\set_style "head2" Syntax\}\p
\p
MESSAGE [{CLASSES(class-list)} {DESTS(dest-list)} {ON| OFF} \p
{ADD| DELETE| REPLACE} {DISPLAY} {TASK(task)} {DEFAULTS}]\p
\p
\{\set_style "bold" MESSAGE\}\p
Command keyword.  You can enter MESSAGE or MSG when you issue this command.  If you specify the MESSAGE keyword without an operand, the message class status for the system is displayed.\p
\p
\{\set_style "bold" CLASSES (class-list)\}\p
A class or list of classes to use for the MESSAGE command.  Enter the entire class name or the first-letter identifier for the class.\p
\p
The following class names are valid:\p
(A) Accessvio\p
(S) Sysinfo\p
(C) Cmdresp\p
(T) Tcptrace\p
(D) Diagnostics\p
(U) Vtamdata\p
(G) Geninfo\p
(V) Vtamtrace\p
(J) Journal\p
(W) Workstation\p
(L) Log\p
(X) Xptrace\p
(N) Navigation\p
* (all message classes)\p
(R) Requests\p
\p
\{\set_style "bold" DESTS(dest-list)\}\p
If the message class status is active, issued messages are sent to this location.  For example, by default Log messages are sent to the JOBLOG, CONSOLE, and LOGFILE.\p
\p
The following destinations are valid:\p
SYSLOG - MVS system log dataset\p
JOBLOG - JES job log dataset\p
CONSOLE - System operator console\p
LOGFILE - InfoSession log dataset\p
HPUBLIC - Public Helpdesk\p
HPRIVATE - Private Helpdesk\p
\p
\{\set_style "bold" ON or OFF\}\p
Changes the active or inactive status of a message class.\p
\p
\{\set_style "bold" ADD or DELETE or REPLACE\}\p
Uses the ADD, DELETE, or REPLACE operand in conjunction with the DESTS operand to specify where a message will be sent.\p
\p
\{\set_style "bold" DISPLAY\}\p
Displays the message class status for the system or a specific task.\p
\p
\{\set_style "bold" TASK(task)\}\p
Displays or updates the message class information only for the specified task (workunit).\p
\p
\{\set_style "bold" DEFAULTS\}\p
Returns the specified task to the current message class settings of the system.         
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Message Classes and Destinations"
\0 \0 \{\set_style "Heading" Message Classes and Associated Destinations\}\p
\p
Each message class has a default destination where the message is routed when the message class is active.\p
\p
\{\set_style "tablehd" Message Class:\}  Accessvio\p
\{\set_style "tablehd" Default Destination:\}  Console, Logfile\p
\p
\{\set_style "tablehd" Message Class:\}  Cmdresp\p
\{\set_style "tablehd" Default Destination:\}  Console, Logfile, Joblog\p
\p
\{\set_style "tablehd" Message Class:\}  Diagnostics\p
\{\set_style "tablehd" Default Destination:\}  Console, Logfile\p
\p
\{\set_style "tablehd" Message Class:\}  Geninfo\p
\{\set_style "tablehd" Default Destination:\}  Logfile\p
\p
\{\set_style "tablehd" Message Class:\}  Journal\p
\{\set_style "tablehd" Default Destination:\}  none\p
\p
\{\set_style "tablehd" Message Class:\}  Log\p
\{\set_style "tablehd" Default Destination:\}  Console, Logfile, Joblog\p
\p
\{\set_style "tablehd" Message Class:\}  Navigation\p
\{\set_style "tablehd" Default Destination:\}  Hpublic, Hprivate\p
\p
\{\set_style "tablehd" Message Class:\}  Requests\p
\{\set_style "tablehd" Default Destination:\}  Hpublic, Hprivate\p
\p
\{\set_style "tablehd" Message Class:\}  Sysinfo\p
\{\set_style "tablehd" Default Destination:\}  Console, Logfile\p
\p
\{\set_style "tablehd" Message Class:\}  Tcptrace\p
\{\set_style "tablehd" Default Destination:\}  Logfile\p
\p
\{\set_style "tablehd" Message Class:\}  Trace\p
\{\set_style "tablehd" Default Destination:\}  none\p
\p
\{\set_style "tablehd" Message Class:\}  Vtamdata\p
\{\set_style "tablehd" Default Destination:\}  Logfile\p
\p
\{\set_style "tablehd" Message Class:\}  Vtamtrace\p
\{\set_style "tablehd" Default Destination:\}  Logfile\p
\p
\{\set_style "tablehd" Message Class:\}  Workstation\p
\{\set_style "tablehd" Default Destination:\}  Workstation         
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>PARM Command"
\0 \0 \{\set_style "scoped" PARM Command\}\p
\p
The PARM command displays the current values of InfoSession's configuration parameters.\p
\p
\{\set_style "head2" Syntax\}\p
\p
PARM [DISPLAY]\p
\p
\{\set_style "bold" PARM\}\p
Command keyword.  You can enter PARM  or PRM to issue this command.\p
\p
\{\set_style "bold" DISPLAY\}\p
Requests a display of the current values of InfoSession's configuration parameters.  
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>PROJLIST Command"
\0 \0 \{\set_style "unscoped" PROJLIST Command\}\p
\p
The PROJLIST command allows you to display the projects that are currently active.\p
\p
\{\set_style "head2" Syntax\}\p
\p
PROJIST [{DISPLAY} {WORKBENCH} {RUNTIME} {ALL} {PLANSTAT} {TABLESTAT} \p
                     {PROJ(name)} {MPROJ(mask)}]\p
\p
PROJLIST [{SET} {WORKBENCH} {RUNTIME} {ALL} {PROJ(name)} {MPROJ(mask)} \p
                       {VDBCACHE(cachesizeK)} {PLANCACHE(cachesizeK)}]\p
\p
\{\set_style "bold" PROJLIST\}\p
Command keyword.  You can enter PROJLIST or PL when you issue this command.  If you specify the PROJLIST keyword without an operand, the total number of active projects is displayed.\p
\p
\{\set_style "bold" DISPLAY\}\p
Requests a detail line describing each user of a project.  The display depends on the project information as specified by the WORKBENCH, RUNTIME, or ALL operands.  This operand is implied when one of the other operands is specified. \p
\p
\{\set_style "bold" WORKBENCH\}\p
Displays a detail line for Workbench projects only.\p
\p
\{\set_style "bold" RUNTIME\}\p
Displays a detail line for run-time projects only.\p
\p
\{\set_style "bold" ALL\}\p
Displays project information for both the Workbench and run-time portion of InfoSession.\p
\p
\{\set_style "bold" PLANSTAT\}\p
Displays various statistics about the use and impact of PLANCACHE.\p
\p
\{\set_style "bold" TABLESTAT\}\p
Displays various statistics about the use and impact of VDBCACHE.\p
\p
\{\set_style "bold" VDBCACHE(\}cachesizeK\{\set_style "bold" )\}\p
Used in conjuction with the SET operand to modify the cache size.\p
\p
\{\set_style "bold" PLANCACHE(\}cachesizeK\{\set_style "bold" )\}\p
Used in conjuction with the SET operand to modify the cache size.\p
\p
\{\set_style "bold" SET\}\p
When used in conjuntion with VDBCACHE(cachesizeK), PLANCACHE(cachesizeK), or both, changes the thresholds of these operands for the identified projects.\p
\p
\{\set_style "bold" PROJ(\}name\{\set_style "bold" )\}\p
Specifies an individual project.\p
\p
\{\set_style "bold" MPROJ(\}mask\{\set_style "bold" )\}\p
Specified a family of similarly named projects.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>STOP Command"
\0 \0 \{\set_style "unscoped" STOP Command\}\p
\p
The STOP command allows you to shut down the InfoSession system or a specified task only if there are no projects currently open.  This command will perform a normal shut down of the InfoSession system or task.\p
\p
\{\set_style "head2" Syntax\}\p
\p
STOP TASK(task)\p
\p
\{\set_style "bold" STOP\}\p
Command keyword.  You can enter STOP or P when you issue this command.  If you do not specify the TASK operand and there are no open projects, the InfoSession address space will be terminated.\p
\p
\{\set_style "bold" TASK(task)\}\p
A specific task to shut down.         
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>STORAGE Command"
\0 \0 \{\set_style "unscoped" STORAGE Command\}\p
\p
Depending upon the frequency and size of InfoSession requests for free storage areas, InfoSession:\p
\p
o  Dynamically allocates storage areas managed by standard MVS storage services.  InfoSession releases the MVS storage areas after the processing is complete.\p
\p
o  Allocates storage from cell pools, which are specifically sized, reserved storage blocks that are set aside by InfoSession and are reused to satisfy subsequent requests.  InfoSession uses cell pools (subdivided into SUBPOOLS and PARTITIONS) as an efficient mechanism for storing information requiring 4K or less space.\p
\p
Cell pool storage is not used for certain types of storage requests, including those requiring space below the 16M line and those larger than 4K in size.  Those storage requirements are satisfied by \p
standard MVS storage services.\p
\p
InfoSession allocates and manages storage allocation internally.  You can use the STORAGE command to display or reset storage utilization statistics for InfoSession.  The display includes the number and size of storage blocks requested as well as the amount of subpool and partition storage space used by InfoSession.\p
\p
\{\set_style "head2" Syntax\}\p
\p
STORAGE [{DISPLAY} {RESET} [{SUBPOOLS}|{PARTITIONS}]]\p
\p
\{\set_style "bold" STORAGE\}\p
Command keyword.  You can enter STORAGE or STG when you issue this command.\p
\p
\{\set_style "bold" DISPLAY\}\p
Displays the storage utilization statistics for InfoSession.  This is the default operand if the RESET operand is not specified.\p
\p
\{\set_style "bold" RESET\}\p
Resets the number of storage requests to zero and then continues collecting statistics from zero.\p
\p
\{\set_style "bold" NOTE:\}  The Requests column from the output message might not indicate zero once the command is issued with this operand.  This is because statistics could have already been collected for this subpool after the command was issued.\p
\p
\{\set_style "bold" SUBPOOLS\}\p
Displays the storage allocation statistics for the subpools used by InfoSession.  A subpool is a collection of storage blocks, each having a size bounded by some power of 2 (for example: 512, 1024,... 2n are subpool sizes).\p
\p
\{\set_style "bold" PARTITIONS\}\p
Displays the storage allocation statistics for the subpool partitions.  Subpools are subdivided into a set of one or more partitions.  Requests for a storage block of a given size are satisfied by assigning a storage cell from the partition that provides the closest, or best, fit.         
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>SYSTEMS Command"
\0 \0 \{\set_style "unscoped" SYSTEMS Command\}\p
\p
The SYSTEMS command allows you to establish a communications connection between two InfoSession systems.  The two InfoSession systems can be located anywhere within your network, even on the same MVS system.  The communications connection is used to transfer a copy of \p
an InfoSession project from one InfoSession to another InfoSession.  For example, when testing of a project is complete, you can connect the development system to the production system to copy a project from the test to the production system.\p
\p
The administrator defines the connection between the InfoSession systems using the Configure menu on the Workbench.  SYSTEMS definitions entered from the Workbench are stored permanently in the InfoSession database.  SYSTEMS definitions entered using the SYSTEMS console command are temporary and will be lost when InfoSession is shut down.  The same is true of the SYSTEMS delete function.  SYSTEMS definitions deleted using the Workbench are permanently removed from the InfoSession database.  SYSTEMS definitions deleted using the console command are only temporarily removed from the system and are reinstated from the InfoSession database when InfoSession is restarted.\p
\p
\{\set_style "head2" Syntax\}\p
\p
SYSTEMS    DEFINE      APPLID(applid)  SMFID(smfid)\p
                          DELETE    APPLID(applid)\p
                          DISPLAY   {APPLID(applid)}\p
                          DRAIN        APPLID(applid)\p
                          EXPORT   APPLID(applid)  PROJECT(project1) {AS(project2)} {REPLACE}\p
                          IMPORT    APPLID(applid)  PROJECT(project1) {AS(project2)} {REPLACE}\p
                          START      APPLID(applid)\p
                          STOP         APPLID(applid)\p
                          TEST         APPLID(applid)\p
\p
The following table explains the syntax:\p
\p
\{\set_style "bold" APPLID(applid)\}\p
Specifies the VTAM APPLID of the remote InfoSession system.  This operand is required for all functions except DISPLAY.\p
\p
\{\set_style "bold" SMFID(applid)\}\p
Specifies the MVS Systems Management Facilities (SMF) ID of the remote InfoSession system.  This operand is required for the DEFINE function and is ignored for all other functions.\p
\p
\{\set_style "bold" PROJECT(project1)\}\p
Specifies the name of the project to be sent to the remote system (EXPORT function) or received from the remote system (IMPORT function).  This is the name of the project as it is known on the system where it currently resides.  This operand is required for the IMPORT and \p
EXPORT functions and is ignored for all other functions.\p
\p
\{\set_style "bold" AS(project2)\}\p
Specifies a new name for the project when it is stored at the receiving system.  This operand is optional for the IMPORT and EXPORT functions and is ignored for all other functions.\p
\p
\{\set_style "bold" REPLACE\}\p
Specifies that the receiving system should replace an existing project on the database if it has the same name as the project being received.  If this operand is not specified and the specified project name already exists in the database of the receiving system, the transfer is not executed.  This \p
operand is optional for the IMPORT and EXPORT functions and is ignored for all other functions.\p
\p
\{\set_style "bold" DEFINE\}\p
Use the SYSTEMS DEFINE command to define a connection to a new remote system.\p
\p
\{\set_style "bold" DELETE\}\p
When a remote connection is no longer needed, use the SYSTEMS DELETE command to delete the definition of the remote system connection.  To execute the SYSTEMS DELETE command successfully, you must first execute the SYSTEMS STOP command for the remote system connection.\p
\p
\{\set_style "bold" DISPLAY\}\p
Use the SYSTEMS DISPLAY command to examine the system connection definitions and to determine whether the connections are active.  You can limit the display to a single connection using the APPLID operand.\p
\{\set_style "bold" \p
DRAIN\}\p
Use the SYSTEMS DRAIN command to end the connection to a remote system after all transactions are complete.  The remote system connection must be active for the drain to be successful.  DRAIN causes the connection to be ended in an orderly manner.  All transactions that are in progress or queued are allowed to execute before the connection is stopped.\p
\p
\{\set_style "bold" EXPORT\}\p
Transfers a DOS file from the MVS to the InfoSession project database.\p
\p
\{\set_style "bold" IMPORT\}\p
Transfers a project from the InfoSession project database to MVS as a DOS file.\p
\p
\{\set_style "bold" START\}\p
Use the SYSTEMS START command to establish a connection to a remote system.  The remote system connection must be defined to this system (and this system must be defined to the remote system), and the connection must be stopped for the start command to be successful.\p
\p
When system connections are defined in the permanent database using the Workbench's Configure, Systems... option, the connections are automatically activated when InfoSession is started.  If the remote system is not active, the start will fail.  However, when the remote system is brought up, it will also attempt to start the connection, and the connection should be successfully established at that time.  The START function can be used to re-establish a connection that has been stopped due to a network outage.\p
\p
\{\set_style "bold" STOP\}\p
Use the SYSTEMS STOP command to end the connection to a remote system.  The remote system connection must be active for the stop to be successful.\p
\p
\{\set_style "bold" TEST\}\p
Use the SYSTEMS TEST command to validate a connection to a remote system.  The remote system connection must be active for the TEST command to be successful.        
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>TASKLIST  Command"
\0 \0 \{\set_style "scoped" TASKLIST Command\}\p
\p
The TASKLIST command allows you to request a display of the task names, process names, running workunites, or tasks based on a pattern (or mask) for a specified task or all active tasks.\p
\p
\{\set_style "head2" Syntax\}\p
\p
TASKLIST [{NAMES| ALL| PROCS} {TASK(task)| MASKTASK(mask)}\p
       {ADDRS} {ACTIVE}]\p
\p
\{\set_style "bold" TASKLIST\}\p
Command keyword.  You can enter TASKLIST or TL when you issue this command.\p
\p
\{\set_style "bold" NAMES or ALL or PROCS\}\p
Specify:\p
o  NAMES  To receive a list of task names that are currently active.\p
o  ALL  For detailed information about active tasks and processes.\p
o  PROCS  A list of task names and process names that are currently active.\p
\p
\{\set_style "bold" TASK(task) or MASKTASK(mask)\}\p
Specify task selection criteria as follows:\p
o  TASK(task)  To receive detailed information for a specified task.\p
o  MASKTASK(mask)  To receive information for tasks based on a wildcard you specify.\p
\p
\{\set_style "bold" ADDRS\}\p
Displays the address of the ITASK or process control block below the associated workunit name.\p
\p
\{\set_style "bold" ACTIVE\}\p
Use in conjunction with the NAMES, PROCS, or ALL operands to display the names of the tasks or processes that are not in $TASK WAIT status.  Use this operand when you are troubleshooting high CPU utilization problems and you suspect that a task is in a loop.        
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>TCP DISPLAY Command"
\0 \0 \{\set_style "unscoped" TCP DISPLAY Command\}\p
\p
The TCP DISPLAY command allows you to display the number of active socket connections and IUCV paths (see the actpath and actsock fields in the command example).  Comparison of the output from two commands can provide an estimate of the rate of TCP/IP activity in the system.\p
\p
\{\set_style "head2" Syntax\}\p
\p
TCP DISPLAY [STATISTICS]\p
\p
\{\set_style "bold" TCP DISPLAY\}\p
Command keyword.  You can enter TCP DISPLAY or TCP D when you issue this command.\p
\p
\{\set_style "bold" STATISTICS\}\p
Specified to request additional information that includes system-wide message and character counts and API call counts.        
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>TCP DISPLAY PATH Command"
\0 \0 \{\set_style "unscoped" TCP DISPLAY PATH Command\}\p
\p
The TCP DISPLAY PATH command is used to obtain information about IUCV activity between InfoSession and the TCP/IP for MVS program product.  Comparison of the output from two commands can provide a gross estimate of the rate of activity on a particular IUCV path.\p
\p
\{\set_style "head2" Syntax\}\p
\p
TCP DISPLAY PATH(number| ALL)\p
\p
\{\set_style "bold" TCP DISPLAY\}\p
Command keyword.  You can enter TCP DISPLAY or TCP D when you issue this command.\p
\p
\{\set_style "bold" PATH\}\p
Specifies the path identifier (a positive integer in the range 1-16) of an IUCV path to be displayed.\p
number or ALL\p
Specify:\p
o  number   Requests a display for a specific path in the system.\p
o  ALL   Requests a display for every active path in the system.        
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>TCP DISPLAY SOCKET Command"
\0 \0 \{\set_style "unscoped" TCP DISPLAY SOCKET Command\}\p
\p
The TCP DISPLAY SOCKET command is typically used to obtain the addressing information of the peer process at the remote system.  Comparison of the output from two commands can provide a gross estimate of the rate of activity for this socket connection.\p
\p
\{\set_style "head2" Syntax\}\p
\p
TCP DISPLAY SOCKET(number | ALL)\p
\p
\{\set_style "bold" TCP DISPLAY\}\p
Command keyword.  You can enter TCP DISPLAY or TCP D when you issue this command.\p
\p
\{\set_style "bold" SOCKET\}\p
Specifies InfoSession's system-wide socket descriptor (a positive integer in the range 0-31,999) of a socket to be displayed.number or ALL\p
Specify:\p
o  number   Requests a display for a specific socket in the system.\p
o  ALL   Requests a display for every active socket in the system.        
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>TCP START APPLICATION Command"
\0 \0 \{\set_style "unscoped" TCP START APPLICATION Command\}\p
\p
The TCP START APPLICATION command is typically used to restart the SuperServer component of the InfoSession after an outage.  The outage may have been explicitly requested (for example, by using the TCP STOP SOCKET(ALL) command), or it  may have been the result of a TCP/IP \p
communication failure.\p
\p
\{\set_style "head2" Syntax\}\p
\p
TCP START APPLICATION(NAME) [PORT(number)] [HOST(number)]\p
                         [PARM(PARMDATA)]\p
                         [WUTYPE(TASK | PROC | VTAM)]\p
\p
\{\set_style "bold" START\}\p
Command keyword.  You can enter TCP START or TCP S when you issue this command.\p
\p
\{\set_style "bold" APPLICATION\}\p
Specifies the name of an application load module to be started.  It can also specify the name of an application that is pre-defined within InfoSession (for example, the SuperServer application program).\p
\p
\{\set_style "bold" PORT\}\p
Optionally specifies a TCP/IP port number that the application has been designed to expect.  When starting the SuperServer application, this parameter should specify the port number that is reserved for  InfoSession (that is, the port that is specified in the PORT parameter of the parmfile dataset).\p
\p
\{\set_style "bold" HOST\}\p
Optionally specifies a TCP/IP host address that the application is designed to expect.\p
\p
\{\set_style "bold" PARM\}\p
Specifies an application parameter string.\p
\p
\{\set_style "bold" WUTYPE\}\p
Specifies the InfoSession execution environment that will be established for the application program:\p
o  TASK   (Default) Specifies that the application will be started as a new task that is logically owned by InfoSession's TCP/IP main task.  \p
o  PROC   Specifies that the application will be started as a new process within the TCP/IP main task.  (This is where a system application such as the SuperServer would normally run.)\p
o  VTAM   Specifies that the application will be started as a new task that is logically owned by InfoSession's VTAM main task.  This environment permits the application to issue VTAM communications requests to establish SNA sessions with other network partners.        
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>TCP START CONNECTION Command"
\0 \0 \{\set_style "unscoped" TCP START CONNECTION Command\}\p
\p
The TCP START CONNECTION command is used to resume TCP/IP communications after an outage.  The outage may have been explicitly requested (for example, by using the TCP STOP PATH(ALL) command) or can be the result of actions such as stopping the IBM TCP/IP for MVS \p
program product.\p
\p
\{\set_style "head2" Syntax\}\p
\p
TCP START CONNECTION\p
\p
\{\set_style "bold" TCP START\}\p
Command keyword.  You can enter TCP START or TCP S when you issue this command.\p
\p
\{\set_style "bold" CONNECTION\}\p
Indicates that a new IUCV connection to the IBM TCP/IP for MVS address space is to be started.        
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>TCP STOP PATH Command"
\0 \0 \{\set_style "unscoped" TCP STOP PATH Command\}\p
\p
The TCP STOP PATH command is used to cause all TCP/IP communications with InfoSession to be ended immediately.  Other functions of InfoSession (for example, SNA communications) can continue normally.  TCP/IP communications can be resumed at a later time by issuing the TCP START CONNECTION command.\p
\p
\{\set_style "head2" Syntax\p
\}\p
TCP STOP PATH(number| ALL)\p
\p
\{\set_style "bold" TCP STOP\}\p
Command keyword.  You can enter TCP STOP or TCP P when you issue this command.\p
\p
\{\set_style "bold" PATH\}\p
Specifies the path identifier (a positive integer in the range 1-16) of a specific IUCV path to be stopped:\p
o  number   Requests that a specific IUCV path be stopped immediately.\p
o  ALL   Requests that all IUCV paths be stopped immediately, effectively ending all TCP/IP communications with InfoSession.        
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>TCP STOP SOCKET Command"
\0 \0 \{\set_style "unscoped" TCP STOP SOCKET Command\}\p
\p
The TCP STOP SOCKET command is used to cause a specific peer to be immediately disconnected from InfoSession.  Using the ALL parameter causes the SuperServer component of InfoSession to end, effectively stopping all TCP/IP communication with InfoSession.\p
\p
\{\set_style "head2" Syntax\}\p
\p
TCP STOP SOCKET(number| ALL)\p
\p
\{\set_style "bold" TCP STOP\}\p
Command keyword.  You can enter TCP STOP or TCP P when you issue this command.\p
\p
\{\set_style "bold" SOCKET\p
\}Specifies InfoSession's system-wide socket descriptor (a positive integer in the range 0-31,999) of a specific socket to be stopped:\p
o  number   Requests that a specific active socket in the system be stopped.\p
o  ALL    Requests that every active socket in the system be stopped.        
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>TPEND Command"
\0 \0 \{\set_style "unscoped" TPEND Command\}\p
\p
The TPEND command allows you to close the specified VTAM ACB (Access Method Control Block) and end all sessions using that ACB.  Normally, InfoSession closes ACBs only during shut down.  This command can be used to close ACBs in order to end session activity with a specific host application.\p
\p
\{\set_style "head2" Syntax\}\p
\p
TPEND [ACB(acb-name)]\p
\p
\{\set_style "bold" TPEND\}\p
Command keyword.  You can enter TPEND or TPE when you issue this command.\p
\p
\{\set_style "bold" ACB(acb-name)\}\p
A VTAM ACB name.        
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>TPLIMITS Command"
\0 \0 \{\set_style "unscoped" TPLIMITS Command\}\p
\p
The TPLIMITS command allows you to display information about, and control the LU6.2 session connections between, InfoSession and its LU6.2 session partners.\p
\p
\{\set_style "head2" Syntax\}\p
\p
TPLIMITS DISPLAY PARTNER(partner_luname| ALL) MODE(modename|\p
              ALL)\p
      RESET PARTNER(partner_luname| ALL) MODE(modename|\p
              ALL)\p
      SET PARTNER(partner_luname) MODE(modename)\p
              TOTAL(session_limit) WIN(min_winners)\p
              LOSE(min_losers)\p
\p
\{\set_style "bold" TPLIMITS\}\p
Command keyword.  You can enter TPLIMITS or TPL when you issue this command.\p
\p
\{\set_style "bold" PARTNER(partner_luname)\}\p
Specifies the name of the of the remote LU6.2 session partner.  Specify partner_luname as the unqualified name of the partner as it is known to VTAM on the system that is executing the display command.\p
\p
\{\set_style "bold" MODE(modename)\}\p
Specifies the name of an SNA session parameters mode.  This name is also referred to as a logmode name.\p
\p
\{\set_style "bold" TOTAL(session_limit)\}\p
Specifies the maximum number of concurrent active sessions that will be accepted with the specified partner using the specified mode.  The TOTAL must be greater than or equal to the sum of WIN+LOSE when a SET subcommand is issued.\p
\p
\{\set_style "bold" WIN(min_winners)\}\p
Specifies the minimum number of contention-winner sessions that will be guaranteed for InfoSession when establishing sessions with the specified partner using the specified mode.\p
\p
Note that WIN can be specified as zero.  WIN must be less than, or equal to, the difference of TOTAL-LOSE when a SET subcommand is issued.\p
\p
\{\set_style "bold" LOSE(min_losers)\}\p
Specifies the minimum number of contention-winner sessions that will be guaranteed for the specified partner when it is establishing sessions with InfoSession using the specified mode.\p
\p
Note that LOSE can be specified as zero.  LOSE must be less than, or equal to, the difference of TOTAL-WIN when a SET subcommand is issued.\p
\p
\{\set_style "bold" DISPLAY\}\p
The DISPLAY subcommand is valid for all active LU6.2 session partners.  For each partner/mode pair specified, the display command shows the:\p
\p
o  Session limits\p
o  Number of active sessions\p
o  Number of sessions that are pending activation\p
o  Number of sessions that are pending termination\p
\p
This subcommand is typically used in diagnostic situations.  For example, to display the overall status of session activity when a partner/mode pair is in the process of being reset.\p
\p
\{\set_style "bold" RESET\}\p
The RESET subcommand is valid for all active LU6.2 session partners that are using parallel session connections to InfoSession.\p
\p
The RESET subcommand sets the session_limit, min_winners, and min_losers to zero for the specified partner and mode pair.  After the command has been processed, InfoSession automatically deactivates sessions as they become idle.  When ALL modes is specified, the \p
SNASVCMG mode is kept active until all sessions for all other modes have been deactivated.  Then the SNASVCMG mode is reset and the partner is disconnected.\p
\p
This subcommand is typically used to cause InfoSession to disconnect an LU6.2 partner.\p
\p
\{\set_style "bold" SET\}\p
The SET subcommand is valid for all active LU6.2 session partners that are using parallel session connections to InfoSession.  The SET subcommand allows you to:\p
\p
o  Increase or decrease the session limits\p
o  Change the mix of contention winner and contention loser sessions\p
\p
After the command has been processed, InfoSession will automatically do the following:\p
\p
o  Activate additional sessions if they are needed and permitted\p
o  Deactivate idle sessions if the number of active sessions exceeds the new session limits established by the command\p
\p
This subcommand is typically used to increase the number of sessions between InfoSession and another application subsystem when there is a large volume of simultaneous transactions between the two partners.        
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>TPPOOLS Command"
\0 \0 \{\set_style "unscoped" TPPOOLS Command\}\p
\p
The TPPOOLS command allows you to display information about the virtual terminal pools.  Each pool is a collection of VTAM ACBs that can be used to access host applications.\p
\p
\{\set_style "head2" Syntax\}\p
\p
TPPOOLS [{POOL(pool-id)} {ACBS} {MAIN}] {SESSIONS}\p
\p
\{\set_style "bold" TPPOOLS\}\p
Command keyword.  You can enter TPPOOLS or TPP when you issue this command.  If you specify the TPPOOLS keyword without an operand, each pool defined to the system is displayed.\p
\p
\{\set_style "bold" POOL(pool-id )\p
\}Specifies an ACB pool ID to display.  This operand is useful in a large system when you are interested in only the activity of a single virtual terminal pool.\p
\p
\{\set_style "bold" ACBS\}\p
Requests a detail line for each ACB in the selected pools.\p
\p
\{\set_style "bold" SESSIONS\}\p
Requests a detail line for each ACB in the selected pools and a detail line for each session using the ACB.\p
\p
\{\set_style "bold" MAIN\}\p
Requests that information for the InfoSession logon be included in the display.        
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>TPSTART Command"
\0 \0 \{\set_style "unscoped" TPSTART Command\}\p
\p
The TPSTART command allows you to open the specified VTAM ACB.  Normally, InfoSession automatically opens ACBs as they are required.  This command is useful when a system operator deactivates the associated VTAM APPLs, and InfoSession must take the ACBs out of service.  When the VTAM APPLs have been re-activated, the TPSTART command is used to notify InfoSession that the associated ACBs can be put back into service.\p
\p
\{\set_style "head2" Syntax\}\p
\p
TPSTART [ACB(acb-name)]\p
\p
\{\set_style "bold" TPSTART\}\p
Command keyword.  You can enter TPSTART or TPS when you issue this command.\p
\p
\{\set_style "bold" ACB(acb-name)\}\p
A VTAM ACB name.        
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>TPUSER Command"
\0 \0 \{\set_style "unscoped" TPUSER Command\}\p
\p
The TPUSER command allows you to display information about the active InfoSession users.\p
\p
\{\set_style "head2" Syntax\}\p
\p
TPUSER [{TASK(task)| LU(lu-name)} {NAMES} {SESSIONS}]\p
\p
\{\set_style "bold" TPUSER\}\p
Command keyword.  You can enter TPUSER or TPU to issue this command.  If you specify the TPUSER keyword without an operand, the total number of logged on users is displayed.\p
\p
\{\set_style "bold" TASK(task) or LU( )\}\p
Specify the task name or LU name of a specific user.  Entering either of these operands limits the display.\p
\p
\{\set_style "bold" NOTE:\}  The task name of a user is the user's LU name.  The TASK and \p
LU operands can be used interchangeably. \p
\p
\{\set_style "bold" NAMES\}\p
Requests a detail line for each active InfoSession user.\p
\p
\{\set_style "bold" SESSIONS\}\p
Requests session information for each session associated with a user.        
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>TRACE Command"
\0 \0 \{\set_style "unscoped" TRACE Command\}\p
\p
The TRACE command allows you to do the following:\p
\p
o  Enable or disable the trace recording\p
o 	Enable or disable classes of trace data for a system level trace\p
o  Enable or disable classes of trace data for a task workunit level trace\p
o  Display the status of the trace recording and the status of the various trace classes at the system or workunit level\p
\p
When the trace recording is enabled, trace events for enabled trace classes are stored in an in-storage wrap-around table.\p
\p
\{\set_style "head2" Syntax\}\p
\p
TRACE [{ON/OFF} {DISPLAY} {CLASSES(class-list)} \p
       {TASK(task)}] [DEFAULTS]\p
\p
\{\set_style "bold" TRACE\}\p
Command keyword.  You can enter TRACE or TR when you issue this command.\p
\p
\{\set_style "bold" ON or OFF\}\p
Indicates whether you want to turn the trace recording on or off.  If you specify these operands in conjunction with the CLASSES operand, the trace is turned on or off for the specified trace event classes.\p
\p
\{\set_style "bold" DISPLAY\p
\}Displays a summary of the trace status. \p
\p
\{\set_style "bold" CLASSES(class-list)\}\p
Specify a trace event class or list of classes to be enabled or disabled.  You can enter the entire class name or just the first letter identifier for the class.  The following class names can be specified in the CLASSES operand:\p
\p
VTAM\p
DISPATCH\p
TASKMGR\p
TABLE\p
OBJECT\p
SPACE\p
XPORT\p
ABEND\p
SECURITY\p
*INTERNAL*\p
TCP\p
SYSTEMS\p
NAVIGATION\p
LOCKMGR\p
RESMGR\p
TIMER\p
RU\p
*  (all classes)\p
\p
\{\set_style "bold" TASK(task)\p
\}Specify a specific task name.  This can be used to limit trace activity to one or more task workunits when diagnosing task-related problems on a busy system. \p
\p
\{\set_style "bold" DEFAULTS\}\p
Resets the enabled trace classes to the startup default configuration for either the entire system or for the indicated workunit if TASK(task) is specified.\p
\p
For workunits, DEFAULTS disables all workunit trace classes, relying on the configuration of the system trace classes to determine whether TRACE requests issued by the workunit are accepted or refused.  For the system trace, DEFAULTS enables a number of key trace classes and ensures that the system tracing is active (ON).  
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>USERLIST Command"
\0 \0 \{\set_style "scoped" USERLIST Command\}\p
\p
The USERLIST command provides a means of identifying the users that are currently logged on to InfoSession.  This command can optionally display the following information about active users:  taskname (LU name), user process name, user-ID, and type (run-time or Workbench user).\p
\p
Also, you can optionally obtain the task name associated with a specified user when you use the USERLIST command for subsequent use in conjunction with any command that requires or accepts a TASK operand.  The USERLIST command is helpful when a system administrator needs to cancel or terminate a selected user or a task associated with a selected user.\p
\p
\{\set_style "head2" Syntax\}\p
\p
USERLIST {NAMES| ALL} {USER(user)| MASKUSER(maskuser)} \p
     {TASK(task)| MASKTASK(masktask)}\p
\p
Note that a detailed USERLIST is generated if the NAMES and ALL operands are omitted when other operands are specified.\p
\p
\{\set_style "bold" USERLIST\}\p
Command keyword.  You can enter USERLIST or UL when you issue this command.  If you specify this command without any additional operands, the current number of active users displays.\p
\p
\{\set_style "bold" NAMES or ALL\}\p
Specify:\p
o NAMES  For a compressed list of active user IDs.\p
o ALL  For detailed information about active users including: user-ID, task name, user process name, InfoSession version, and type (run-time or Workbench user).\p
\p
\{\set_style "bold" USER(userid) or MASKUSER(mask)\}\p
Specify user selection criteria as follows:\p
o  USER(userid)  To receive detailed information for a specified user-ID.\p
o  MASKUSER(mask)  To receive detailed information for users based on a wildcard string you specify.\p
\p
\{\set_style "bold" TASK(task) or MASKTASK(mask)\}\p
Specify task selection criteria as follows:\p
o  TASK(task)   To receive detailed information for users of a specified task.\p
o  MASKTASK(mask)   To receive information for users of tasks based on a wildcard string you specify.        
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Entering Operator Commands"
\0 \0 \{\set_style "Heading" Entering Operator Commands\}\p
\p
You can enter InfoSession operator commands from the MVS console.  Typically, operator commands can affect the InfoSession system or a specified task (or workunit).  When you issue an operator command for a specific task, the processes associated with that task are also affected by the command.        
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Viewing Operator Command Results"
\0 \0 \{\set_style "Heading" Viewing Operator Command Results\}\p
\p
When you enter an operator command, the resulting output from the command is displayed on the console issuing the command or on the InfoSession Helpdesk Command window.  The output generated by these commands is in the form of InfoSession INT messages.        
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Command Syntax Conventions"
\0 \0 \{\set_style "Heading" Command Syntax Conventions\}\p
\p
The conventions used for the command syntax are described below:\p
\p
\{\set_style "tablehd" UPPERCASE keywords:\}  Must be entered as shown\p
\{\set_style "tablehd" Underline:\}  Minimum characters required for keywords\p
\{\set_style "tablehd" lowercase characters:\}  Indicates user-specified variables\p
\{\set_style "tablehd" | :\}  Indicates OR condition\p
\{\set_style "tablehd" [ ] :\}  Indicates required operands; choose one or more\p
\{\set_style "tablehd" { } :\}  Indicates optional operands; choose one\p
\{\set_style "tablehd" Italics:\}  Indicates default operand\p
\{\set_style "tablehd" ( ) : \} Indicates a variable\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Specifying Multiple Operands"
\0 \0 \{\set_style "Heading" Specifying Multiple Operands\}\p
\p
Operands and their associated values, if any, are separated from adjacent operands by a space, a single comma, or both.        
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Specifying Multiple Values in an Operand"
\0 \0 \{\set_style "Heading" Specifying Multiple Values in an Operand\}\p
\p
If you specify multiple values in a single operand, each value is separated by a space, a single comma, or both.       
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Saving Helpdesk Settings"
\0 \0 \{\set_style "Heading" Saving Helpdesk Settings\p
\}\p
When you save the Helpdesk settings, all the parameters and options that have been set up for each window are saved.  Also, upon re-execution, the Helpdesk is restored using its saved settings.  For example, windows that are open when the settings are saved are reopened when Helpdesk is restarted.  To save the Helpdesk settings:\p
\p
o  Select \{\set_style "italic" Preferences, Save Settings Now \} from the menu bar to save your Helpdesk window settings periodically.\p
\p
o  Select \{\set_style "italic" Preferences, Save Settings on Exit \} from the menu bar to save your Helpdesk window settings automatically when you exit the program.\p
\p
\{\set_style "bold" NOTE:\}  This does not save the information in the various output windows.\p
\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Saving Helpdesk Output"
\0 \0 \{\set_style "Heading" Saving the Helpdesk Output\p
\}\p
The information in the Helpdesk output windows can be saved in one of two ways:\p
\p
o  Select the \{\set_style "italic" Save\} icon on the toolbar.\p
\p
o  Select \{\set_style "italic" File, Save\} from the menu bar.\p
\p
The \{\subtopic "<ihlpdesk>Save Command Output Window" Save Command Output Window\} displays.                    
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Save Command Output Window"
\0 \0 \{\set_style "Heading" Save Command Output Window\p
\}\p
The Save Command Output Window enables you to save your Helpdesk output.\p
\p
The following fields are displayed:\p
\p
\{\subtopic "<ihlpdesk>File Name" File Name\}\p
\{\subtopic "<ihlpdesk>Directories" Directories\}\p
\{\subtopic "<ihlpdesk>Save File as Type" Save File as Type\}\p
\{\subtopic "<ihlpdesk>Drives" Drives\}
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>File Name"
\0 \0 \{\set_style "Heading" File Name\p
\}\p
Enter the name of the file to which you want to save your output information.                    
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Directories"
\0 \0 \{\set_style "Heading" Directories\p
\}\p
Select the path and directory were you want to save the file.                    
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Save File as Type"
\0 \0 \{\set_style "Heading" Save File as Type\p
\}\p
Select the file type.                    
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Drives"
\0 \0 \{\set_style "Heading" Drives\p
\}\p
Select the drive where you want to save your file.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Specifying an Alternate Configuration File"
\0 \0 \{\set_style "Heading" Specifying an Alternate Configuration File\p
\}\p
To specify an alternate configuration file for the Helpdesk:\p
\p
o  Modify the environment variable INTRTENV in your AUTOEXEC.BAT file (for Windows) or CONFIG.SYS file (for OS/2) with the path and file name of the configuration file you want to use.  A sample INTRTENV variable is shown below:\p
\p
\{\set_style "bold" SET INTRTENV=\{\set_style "bold" \{\set_style "italic" C:\\INF\\IRT.CFG\}\p
\}\}\p
The variable in italics is the path and file name of the default configuration file.  Replace this variable with the configuration file you want to use.  You should reboot windows or shut down OS/2 in order to use the alternate configuration file specified by the environment handle.\p
\p
o  Change the parameter to the IHLPDESK.EXE file.  Specify the new configuration file in Windows using the Program Manager's \{\set_style "italic" File, Properties... \}and in OS/2 using Program Settings. \p
\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Command Scoping"
\0 \0 \{\set_style "Heading" Command Scoping\p
\}\p
The Helpdesk is set up for two types of users: \p
\p
o  Those who have global access to the operator commands and messages generated by any use\p
\p
o  Those who are restricted to certain operator commands and messages that pertain only to that user.\p
\p
\{\set_style "head2" Helpdesk and Command Scoping\p
\}\p
You can control access to the Helpdesk application through security resource calls in the same manner you control access to the Workbench.  In addition to controlling overall access to the Helpdesk, global Helpdesk access can be controlled using the SYSOPER security resource.  \p
\p
See the following Topics\p
\p
\{\subtopic "<ihlpdesk>Unscoped Users" Unscoped Users\}\p
\{\subtopic "<ihlpdesk>Scoped Users" Scoped Users\}\p
\{\subtopic "<ihlpdesk>Scoped Commands and Operands" Scoped Commands and Operands\}\p
\{\goto "<ihlpdesk>Operator Commands" Operator Commands\}\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Unscoped Users"
\0 \0 \{\set_style "Heading" Unscoped Users\p
\}\p
Users granted SYSOPER authority are unscoped and allowed to enter any valid InfoSession operator command and monitor message traffic from any task.  Unscoped  users can scope themselves in order to limit the scope of commands they can enter and messages they can receive.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Scoped Users"
\0 \0 \{\set_style "Heading" Scoped Users\p
\}\p
Users who do not have SYSOPER authority are scoped.  Scoped users can enter only certain commands that will not affect other InfoSession users, such as activating message classes associated with only their task.  In addition to the command scoping restraints, scoped users can monitor only message traffic generated by their task (local monitoring).\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Scoped Commands and Operands"
\0 \0 \{\set_style "Heading" Scoped Commands and Operands\p
\}\p
Scoped users are limited to the commands listed below.  Scoped commands can contain a scoping operand used to limit the impact of the command.  If scoped users attempt to issue an unauthorized command or operand value, they will receive an error message indicating that they are not authorized for that command or operand value.  The scoping operand is automatically \p
appended to any authorized command issued by a scoped user. \p
\p
The following lists corresponding commands, scoping operands and their values:\p
\p
\{\set_style "tablehd" Command: \} MESSAGE\p
\{\set_style "tablehd" Scoping Operand: \} TASK\p
\{\set_style "tablehd" Scoping Operand Value: \} user's taskname\p
\p
\{\set_style "tablehd" Command: \} TASKLIST\p
\{\set_style "tablehd" Scoping Operand:\}  TASK\p
\{\set_style "tablehd" Scoping Operand Value: \} user's taskname\p
\p
\{\set_style "tablehd" Command:\}  USER LIST\p
\{\set_style "tablehd" Scoping Operand:\}  TASK\p
\{\set_style "tablehd" Scoping Operand Value:\}  	user's taskname\p
\p
\{\set_style "tablehd" Command: \} ISSUE\p
\{\set_style "tablehd" Scoping Operand:\}  ID\p
\{\set_style "tablehd" Scoping Operand Value:\}  user's taskname\p
\p
\{\set_style "tablehd" Command: \} ISSUEND\p
\{\set_style "tablehd" Scoping Operand:\}  ID\p
\{\set_style "tablehd" Scoping Operand Value: \} 	user's taskname\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Output Windows Options"
\0 \0 \{\set_style "Heading" Output Windows Options\p
\}\p
Each type of output window can be opened multiple times to satisfy a number of different requests.  In order to prevent confusion, each window can be individually defined by window options, message colors, and miscellaneous configuration options.\p
\p
You can set window options, Helpdesk colors, and window settings.\p
\p
See the following topics:\p
\p
\{\subtopic "<ihlpdesk>Window Options" Window Options\}\p
\{\subtopic "<ihlpdesk>Helpdesk Colors" Helpdesk Colors\}\p
\{\subtopic "<ihlpdesk>Command Settings" Command Settings\}\p
\{\subtopic "<ihlpdesk>Monitor Settings" Monitor Settings\}\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Window Options"
\0 \0 \{\set_style "Heading" Window Options\p
\}\p
Select Options, Window... from the menu bar.  The Window Options window displays.\p
The Window Options window enables you to define your window options.\p
\p
The following fields are displayed:\p
\p
\{\subtopic "<ihlpdesk>Window Title" Window Title\}\p
\{\subtopic "<ihlpdesk>Scroll Mode" Scroll Mode\}\p
\{\subtopic "<ihlpdesk>Wrap Mode" Wrap Mode\}\p
\{\subtopic "<ihlpdesk>Scroll Amount" Scroll Amount\}\p
\{\subtopic "<ihlpdesk>Refresh Interval" Refresh Interval\}\p
\p
\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Window Title"
\0 \0 \{\set_style "Heading" Window Title\p
\}\p
Specify the name of the output window.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Scroll Mode"
\0 \0 \{\set_style "Heading" Scroll mode\p
\}\p
Displays the output in a window that is scrollable.  When the output is saved, the entire list box is saved to the specified file name.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Wrap Mode"
\0 \0 \{\set_style "Heading" Wrap mode\p
\}\p
Displays only the output that will fit in the window view.  New output is displayed above the solid black line.  When the output is saved, only the output displayed in the window is saved. \p
\p
\{\set_style "bold" NOTE: \} If an output window in wrap display mode is resized or redefined to scroll, the window will be cleared of its output.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Scroll Amount"
\0 \0 \{\set_style "Heading" Scroll Amount\p
\}\p
Specify the number of lines that the output window will maintain in the list box before it starts to discard the oldest output lines.  The maximum field value is 32,000 lines.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Refresh Interval"
\0 \0 \{\set_style "Heading" Refresh Interval\p
\}\p
Specify in seconds how often the output window is refreshed.  The maximum field value is sixty seconds.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Helpdesk Colors"
\0 \0 \{\set_style "Heading" Helpdesk Colors\p
\}\p
The Helpdesk gives you the option of choosing the foreground and background colors associated with message severity levels in each window.  To choose your message colors, select Options, Colors... from the menu bar.  The name of the active window will appear next to Helpdesk Colors.  You can define the colors for the following message severity levels:\p
\p
o  Informational (I)\p
\p
o  Warning (W)\p
\p
o 	Error (E)\p
\p
o  Severe Error (S)\p
\p
o  Default (no associated letter)\p
\p
\{\set_style "head2" Changing Message Severity Colors\p
\}\p
To change the message severity colors:\p
\p
1.	Select the message severity level that you want to change in the Severity list box.\p
\p
2.	Select the desired Message Text Color and Background Color.\p
\p
3.	Repeat the above steps to change other message severity levels.\p
\p
4.	Select <OK> to accept the changes made to the message severity levels.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Command Settings"
\0 \0 \{\set_style "Heading" Command Settings\p
\}\p
In the Command Settings window you can preset a command that is automatically submitted when the Helpdesk is connected by selecting \{\set_style "italic" Options, Configure...\} from the menu bar (make sure that this window is active when you save the settings).  Unscoped users can also define the scope (local or global) of commands that are entered in this window.\p
\p
The following fields are displayed:\p
\p
\{\subtopic "<ihlpdesk>Initial Command" Initial Command\}\p
Scope\p
  \{\subtopic "<ihlpdesk>Local (Restricted)  (Command Settings Window)" Local (Restricted)\}\p
  \{\subtopic "<ihlpdesk>Global (Command Settings Window)" Global\}
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Initial Command"
\0 \0 \{\set_style "Heading" Initial Command\p
\}\p
Enter the operator command that will automatically be issued when the Helpdesk is connected.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Local (Restricted)  (Command Settings Window)"
\0 \0 \{\set_style "Heading" Scope:  Local Restricted\p
\}\p
Select the scope of all commands that are issued in this particular \p
Command window.\p
\p
\{\set_style "head2" Local (Restricted)\}.  The Command window will monitor only message traffic generated by that workstation.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Global (Command Settings Window)"
\0 \0 \{\set_style "Heading" Scope:  Global\p
\}\p
Select the scope of all commands that are issued in this particular Command window.\p
\p
\{\set_style "head2" Global\}.  The Command window will monitor all message traffic.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Monitor Settings"
\0 \0 \{\set_style "Heading" Monitor Settings\p
\}\p
You can indicate the message class, destination, scope, and formatting options for the messages that you want to monitor.   Select \{\set_style "italic" Options, Configure...\} and the Monitor Settings Window appears.\p
\p
The following fields are displayed:\p
\p
\{\subtopic "<ihlpdesk>Message Class" Message Class\}\p
\{\subtopic "<ihlpdesk>Destinations" Destinations\}\p
Scope\p
   \{\subtopic "<ihlpdesk>Local (Monitor Settings Window)" Local\}\p
   \{\subtopic "<ihlpdesk>Global (Monitor Settings Window)" Global\}\p
   \{\subtopic "<ihlpdesk>Task Name (Scope)" Task Name\}\p
Formatting\p
   \{\subtopic "<ihlpdesk>Date Stamp" Date Stamp\}\p
   \{\subtopic "<ihlpdesk>Time Stamp" Time Stamp\} \p
   \{\subtopic "<ihlpdesk>Task Name (formatting)" Task Name\}\p
\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Message Class"
\0 \0 \{\set_style "Heading" Message Class\p
\}\p
Check the message classes that you want to monitor.\p
\p
\{\set_style "head2" Message Classes and Destinations\p
\}\p
All the messages from the Access Violations and VTAM Data message class that are routed to the Console appear in the Monitor window.\p
\p
If no options in Message Class or Destinations are marked, message monitoring will be deactivated for this Monitor window.  If options in only Message Class or Destinations are marked, the options in the unmarked area default to All Classes or All Destinations.  The following table shows the message classes and their default destinations:\p
\p
\{\set_style "tablehd" Message Class: \} General Information\p
\{\set_style "tablehd" Destination Default: \} Logfile\p
\{\set_style "tablehd" Active Default: \} Yes\p
\{\set_style "tablehd" Description: \} General information messages\p
\p
\{\set_style "tablehd" Message Class: \} System Information\p
\{\set_style "tablehd" Destination Default: \} Logfile, Console\p
\{\set_style "tablehd" Active Default: \} Yes\p
\{\set_style "tablehd" Description: \} System information messages\p
\p
\{\set_style "tablehd" Message Class: \} Access Violations\p
\{\set_style "tablehd" Destination Default: \} Logfile, Console\p
\{\set_style "tablehd" Active Default: \} Yes\p
\{\set_style "tablehd" Description: \} Security information messages, particularly those issued when a user is refuse access to the system or is denied access to a resource.\p
\p
\{\set_style "tablehd" Message Class: \} Diagnostics\p
\{\set_style "tablehd" Destination Default: \} Logfile, Console\p
\{\set_style "tablehd" Active Default: \} Yes\p
\{\set_style "tablehd" Description: \} Diagnostic information messages that are internally generated and are intended to document product failures.\p
\p
\{\set_style "tablehd" Message Class: \} Logging\p
\{\set_style "tablehd" Destination Default: \} Logfile, Joblog, Console\p
\{\set_style "tablehd" Active Default: \} Yes\p
\{\set_style "tablehd" Description: \} Maintenance information messages about the InfoSession LOGFILEs.\p
\p
\{\set_style "tablehd" Message Class: \} Workstation\p
\{\set_style "tablehd" Destination Default: \} none\p
\{\set_style "tablehd" Active Default: \} Yes\p
\{\set_style "tablehd" Description: \} Information messages about the user's workstation.\p
\p
\{\set_style "tablehd" Message Class: \} Run-time Journal\p
\{\set_style "tablehd" Destination Default: \} none\p
\{\set_style "tablehd" Active Default:\}  Yes\p
\{\set_style "tablehd" Description: \} Run-time information messages that are generated by the run-time application program.\p
\p
\{\set_style "tablehd" Message Class: \} Command Response\p
\{\set_style "tablehd" Destination Default:\}  Logfile, Joblog, Console\p
\{\set_style "tablehd" Active Default: \} Yes\p
\{\set_style "tablehd" Description: \} Command information messages that provide responses generated on behalf of InfoSession commands received from the Helpdesk, system operator, or suitably authorized product administrators.  Responses to commands originating from an MVS console are always returned to that console.\p
\p
\{\set_style "tablehd" Message Class: \} SQL Requests\p
\{\set_style "tablehd" Destination Default: \} Hprivate, Hpublic\p
\{\set_style "tablehd" Active Default: \} No\p
\{\set_style "tablehd" Description: \} Information messages that provide a journal of SQL requests.\p
\p
\{\set_style "tablehd" Message Class: \} Navigation\p
\{\set_style "tablehd" Destination Default: \} Hprivate, Hpublic\p
\{\set_style "tablehd" Active Default: \} No\p
\{\set_style "tablehd" Description: \} Trace information messages used to diagnose session navigation problems.\p
\p
\{\set_style "tablehd" Message Class: \} Xport Trace\p
\{\set_style "tablehd" Destination Default: \} Logfile\p
\{\set_style "tablehd" Active Default: \} No\p
\{\set_style "tablehd" Description: \} Trace information messages that trace the traffic between the workstation and the host system and can be used for diagnostic purposes.\p
\p
\{\set_style "tablehd" Message Class: \} TCP/IP Trace\p
\{\set_style "tablehd" Destination Default: \} Logfile\p
\{\set_style "tablehd" Active Default: \} No\p
\{\set_style "tablehd" Description: \} TCP/IP trace information messages that provide internal diagnostics that can be specifically enabled or disabled by the system operator.\p
\p
\{\set_style "tablehd" Message Class: \} VTAM Trace\p
\{\set_style "tablehd" Destination Default: \} Logfile\p
\{\set_style "tablehd" Active Default: \} No\p
\{\set_style "tablehd" Description: \} VTAM trace information messages that provide internal diagnostics that can be specifically enabled or disabled by the system operator.\p
\p
\{\set_style "tablehd" Message Class: \} VTAM Data\p
\{\set_style "tablehd" Destination Default: \} Logfile\p
\{\set_style "tablehd" Active Default: \} No\p
\{\set_style "tablehd" Description: \} Trace information messages that trace all send and receive activity on all SNA sessions, including a complete display of the data.  \{\set_style "bold" NOTE: \} Use this options with caution in a system with high volume data traffic.\p
\p
\{\set_style "bold" NOTE: \} To prevent recursive message monitoring, some message classes and protocol level traces (Xport, VTAM, and TCP/IP) will not be monitored for local tasks.  To trace output effectively for these message classes, you should obtain LOGFILE output.\p
\p
\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Destinations"
\0 \0 \{\set_style "Heading" Destinations\p
\}\p
Check the message destinations that you want to monitor.\p
\p
See  \{\goto "<ihlpdesk>Message Class" Message Classes and Destinations\}.                   
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Local (Monitor Settings Window)"
\0 \0 \{\set_style "Heading" Scope:  Local\p
\}\p
Unrestricted users can indicate the scope of the messages they are monitoring.  By default, restricted users can monitor only their own message traffic.  Users can indicate a specific task that they would like to monitor in the Task Name field.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Global (Monitor Settings Window)"
\0 \0 \{\set_style "Heading" Scope:  Global\p
\}\p
Unrestricted users can indicate the scope of the messages they are monitoring.  By default, restricted users can monitor only their own message traffic.  Users can indicate a specific task that they would like to monitor in the Task Name field.                   
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Task Name (Scope)"
\0 \0 \{\set_style "Heading" Task Name\p
\}\p
Unrestricted users can indicate the scope of the messages they are monitoring.  By default, restricted users can monitor only their own message traffic.  Users can indicate a specific task that they would like to monitor in the Task Name field.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Date Stamp"
\0 \0 \{\set_style "Heading" Date Stamp\p
\}\p
Provides the date when the message was issued.                   
\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Time Stamp"
\0 \0 \{\set_style "Heading" Time Stamp\p
\}\p
Provides the time when the message was issued.\p

\[----------------------------------------------------------------------\]
\topic "<ihlpdesk>Task Name (formatting)"
\0 \0 \{\set_style "Heading" Task Name\p
\}\p
Provides the name of the task that issued the message.\p

